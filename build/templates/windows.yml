# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

parameters:
- name: arch
  type: string

jobs:
- job: Windows_${{ parameters.arch }}
  displayName: "Build for Windows ${{ parameters.arch }}"
  pool:
    vmImage: windows-2019
  workspace:
    clean: all
  variables:
    UnitTests.ResultsPrefix: 'UnitTestResults-${{ parameters.arch }}'
  steps:
  - task: CmdLine@2
    displayName: 'Build with CMake and Ninja'
    inputs:
      script: |
        echo off
        set vcvars=
        set compiler=
        if "${{ parameters.arch }}"=="x64" (
          set vcvars=vcvars64.bat
          set compiler=bin/HostX64/x64/cl.exe
          goto :build
        )
        if "${{ parameters.arch }}"=="x86" (
          set vcvars=vcvarsamd64_x86.bat
          set compiler=bin/HostX86/x86/cl.exe
          goto :build
        )
        if "${{ parameters.arch }}"=="arm" (
          set vcvars=vcvarsamd64_arm.bat
          set compiler=bin/HostX86/ARM/cl.exe
          goto :build
        )
        if "${{ parameters.arch }}"=="arm64" (
          set vcvars=vcvarsamd64_arm64.bat
          set compiler=bin/HostX86/ARM64/cl.exe
          goto :build
        )

        echo "arch '${{ parameters.arch }}' not recognized! Valid values are x86, x64, arm, and arm64"
        exit /b -1

        :build
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\%vcvars%"
          echo on
          "%DevEnvDir%CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -G "Ninja" -DCMAKE_BINARY_DIR="%BUILD_BINARIESDIRECTORY%" -Dgtest_force_shared_crt:BOOL="True" -DCMAKE_CXX_COMPILER:FILEPATH="%VCToolsInstallDir%%compiler%" -DCMAKE_C_COMPILER:FILEPATH="%VCToolsInstallDir%%compiler%" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_MAKE_PROGRAM="%DevEnvDir%CommonExtensions\Microsoft\CMake\Ninja\ninja.exe" "%BUILD_SOURCESDIRECTORY%"
          Ninja
      workingDirectory: $(Build.BinariesDirectory)
      failOnStderr: true
  - task: CmdLine@2
    displayName: 'Run Unit Tests'
    condition: and(succeeded(), or(eq('${{ parameters.arch }}', 'x86'), eq('${{ parameters.arch }}', 'x64')))
    inputs:
      script: |
        echo on
        :: The *SumVerifier tests fail when run in the same test run. Since the tests use different classes and test fixtures,
        :: this failure is most likely due to a bug in Google Test. Run tests separately for now as a workaround.
        "%BUILD_BINARIESDIRECTORY%\test\AccessorFrameworkTests.exe" --gtest_filter="-DynamicSumVerifierTest.*" --gtest_output=xml:%UNITTESTS_RESULTSPREFIX%-1.xml
        "%BUILD_BINARIESDIRECTORY%\test\AccessorFrameworkTests.exe" --gtest_filter="DynamicSumVerifierTest.*" --gtest_output=xml:%UNITTESTS_RESULTSPREFIX%-2.xml
      workingDirectory: $(Build.BinariesDirectory)
      failOnStderr: true
  - task: PublishTestResults@2
    displayName: 'Publish Unit Test Results'
    condition: and(succeeded(), or(eq('${{ parameters.arch }}', 'x86'), eq('${{ parameters.arch }}', 'x64')))
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/$(UnitTests.ResultsPrefix)*.xml'
      searchFolder: $(Build.BinariesDirectory)
      mergeTestResults: true
      testRunTitle: '$(Build.BuildNumber).Windows_${{ parameters.arch }}.UnitTests'